/*
 * This file is generated by jOOQ.
*/
package com.brook.example.jooq.tables;


import com.brook.example.jooq.CaishenBackstage;
import com.brook.example.jooq.Indexes;
import com.brook.example.jooq.Keys;
import com.brook.example.jooq.tables.records.BackstageTbMessageLogRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BackstageTbMessageLog extends TableImpl<BackstageTbMessageLogRecord> {

    private static final long serialVersionUID = 691179525;

    /**
     * The reference instance of <code>caishen_backstage.backstage_tb_message_log</code>
     */
    public static final BackstageTbMessageLog BACKSTAGE_TB_MESSAGE_LOG = new BackstageTbMessageLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BackstageTbMessageLogRecord> getRecordType() {
        return BackstageTbMessageLogRecord.class;
    }

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.id</code>.
     */
    public final TableField<BackstageTbMessageLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.sms_id</code>. 短信内容类型id
     */
    public final TableField<BackstageTbMessageLogRecord, Integer> SMS_ID = createField("sms_id", org.jooq.impl.SQLDataType.INTEGER, this, "短信内容类型id");

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.sms_name</code>. 短信纬度
     */
    public final TableField<BackstageTbMessageLogRecord, String> SMS_NAME = createField("sms_name", org.jooq.impl.SQLDataType.VARCHAR(45), this, "短信纬度");

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.create_date</code>.
     */
    public final TableField<BackstageTbMessageLogRecord, String> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.str1</code>. 备用字段1
     */
    public final TableField<BackstageTbMessageLogRecord, String> STR1 = createField("str1", org.jooq.impl.SQLDataType.VARCHAR(45), this, "备用字段1");

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.str2</code>. 备用字段2
     */
    public final TableField<BackstageTbMessageLogRecord, String> STR2 = createField("str2", org.jooq.impl.SQLDataType.VARCHAR(45), this, "备用字段2");

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.str3</code>. 备用字段3
     */
    public final TableField<BackstageTbMessageLogRecord, String> STR3 = createField("str3", org.jooq.impl.SQLDataType.VARCHAR(45), this, "备用字段3");

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.str4</code>. 备用字段4
     */
    public final TableField<BackstageTbMessageLogRecord, String> STR4 = createField("str4", org.jooq.impl.SQLDataType.VARCHAR(45), this, "备用字段4");

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.str5</code>. 备用字段5
     */
    public final TableField<BackstageTbMessageLogRecord, String> STR5 = createField("str5", org.jooq.impl.SQLDataType.VARCHAR(45), this, "备用字段5");

    /**
     * The column <code>caishen_backstage.backstage_tb_message_log.success_count</code>.
     */
    public final TableField<BackstageTbMessageLogRecord, Integer> SUCCESS_COUNT = createField("success_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>caishen_backstage.backstage_tb_message_log</code> table reference
     */
    public BackstageTbMessageLog() {
        this(DSL.name("backstage_tb_message_log"), null);
    }

    /**
     * Create an aliased <code>caishen_backstage.backstage_tb_message_log</code> table reference
     */
    public BackstageTbMessageLog(String alias) {
        this(DSL.name(alias), BACKSTAGE_TB_MESSAGE_LOG);
    }

    /**
     * Create an aliased <code>caishen_backstage.backstage_tb_message_log</code> table reference
     */
    public BackstageTbMessageLog(Name alias) {
        this(alias, BACKSTAGE_TB_MESSAGE_LOG);
    }

    private BackstageTbMessageLog(Name alias, Table<BackstageTbMessageLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private BackstageTbMessageLog(Name alias, Table<BackstageTbMessageLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CaishenBackstage.CAISHEN_BACKSTAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BACKSTAGE_TB_MESSAGE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BackstageTbMessageLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BACKSTAGE_TB_MESSAGE_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BackstageTbMessageLogRecord> getPrimaryKey() {
        return Keys.KEY_BACKSTAGE_TB_MESSAGE_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BackstageTbMessageLogRecord>> getKeys() {
        return Arrays.<UniqueKey<BackstageTbMessageLogRecord>>asList(Keys.KEY_BACKSTAGE_TB_MESSAGE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackstageTbMessageLog as(String alias) {
        return new BackstageTbMessageLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackstageTbMessageLog as(Name alias) {
        return new BackstageTbMessageLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BackstageTbMessageLog rename(String name) {
        return new BackstageTbMessageLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BackstageTbMessageLog rename(Name name) {
        return new BackstageTbMessageLog(name, null);
    }
}
