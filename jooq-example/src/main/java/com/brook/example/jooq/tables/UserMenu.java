/*
 * This file is generated by jOOQ.
*/
package com.brook.example.jooq.tables;


import com.brook.example.jooq.CaishenBackstage;
import com.brook.example.jooq.Indexes;
import com.brook.example.jooq.Keys;
import com.brook.example.jooq.tables.records.UserMenuRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMenu extends TableImpl<UserMenuRecord> {

    private static final long serialVersionUID = 1236694271;

    /**
     * The reference instance of <code>caishen_backstage.user_menu</code>
     */
    public static final UserMenu USER_MENU = new UserMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserMenuRecord> getRecordType() {
        return UserMenuRecord.class;
    }

    /**
     * The column <code>caishen_backstage.user_menu.id</code>.
     */
    public final TableField<UserMenuRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>caishen_backstage.user_menu.user_id</code>. 用户id
     */
    public final TableField<UserMenuRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户id");

    /**
     * The column <code>caishen_backstage.user_menu.menu_id</code>. 菜单id
     */
    public final TableField<UserMenuRecord, Integer> MENU_ID = createField("menu_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "菜单id");

    /**
     * The column <code>caishen_backstage.user_menu.is_delete</code>. 状态  0使用  1删除
     */
    public final TableField<UserMenuRecord, Integer> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "状态  0使用  1删除");

    /**
     * The column <code>caishen_backstage.user_menu.create_date</code>.
     */
    public final TableField<UserMenuRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>caishen_backstage.user_menu.update_date</code>.
     */
    public final TableField<UserMenuRecord, Timestamp> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>caishen_backstage.user_menu</code> table reference
     */
    public UserMenu() {
        this(DSL.name("user_menu"), null);
    }

    /**
     * Create an aliased <code>caishen_backstage.user_menu</code> table reference
     */
    public UserMenu(String alias) {
        this(DSL.name(alias), USER_MENU);
    }

    /**
     * Create an aliased <code>caishen_backstage.user_menu</code> table reference
     */
    public UserMenu(Name alias) {
        this(alias, USER_MENU);
    }

    private UserMenu(Name alias, Table<UserMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserMenu(Name alias, Table<UserMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CaishenBackstage.CAISHEN_BACKSTAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_MENU_INDEX2, Indexes.USER_MENU_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserMenuRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_MENU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserMenuRecord> getPrimaryKey() {
        return Keys.KEY_USER_MENU_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserMenuRecord>> getKeys() {
        return Arrays.<UniqueKey<UserMenuRecord>>asList(Keys.KEY_USER_MENU_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserMenu as(String alias) {
        return new UserMenu(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserMenu as(Name alias) {
        return new UserMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserMenu rename(String name) {
        return new UserMenu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserMenu rename(Name name) {
        return new UserMenu(name, null);
    }
}
