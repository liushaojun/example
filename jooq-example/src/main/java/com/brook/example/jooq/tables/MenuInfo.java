/*
 * This file is generated by jOOQ.
*/
package com.brook.example.jooq.tables;


import com.brook.example.jooq.CaishenBackstage;
import com.brook.example.jooq.Indexes;
import com.brook.example.jooq.Keys;
import com.brook.example.jooq.tables.records.MenuInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MenuInfo extends TableImpl<MenuInfoRecord> {

    private static final long serialVersionUID = -743848925;

    /**
     * The reference instance of <code>caishen_backstage.menu_info</code>
     */
    public static final MenuInfo MENU_INFO = new MenuInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MenuInfoRecord> getRecordType() {
        return MenuInfoRecord.class;
    }

    /**
     * The column <code>caishen_backstage.menu_info.id</code>.
     */
    public final TableField<MenuInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>caishen_backstage.menu_info.menu_name</code>. 菜单名称
     */
    public final TableField<MenuInfoRecord, String> MENU_NAME = createField("menu_name", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "菜单名称");

    /**
     * The column <code>caishen_backstage.menu_info.menu_url</code>. 菜单跳转地址
     */
    public final TableField<MenuInfoRecord, String> MENU_URL = createField("menu_url", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false).defaultValue(org.jooq.impl.DSL.inline("#", org.jooq.impl.SQLDataType.VARCHAR)), this, "菜单跳转地址");

    /**
     * The column <code>caishen_backstage.menu_info.parent_node_id</code>. 父节点id
     */
    public final TableField<MenuInfoRecord, Integer> PARENT_NODE_ID = createField("parent_node_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "父节点id");

    /**
     * The column <code>caishen_backstage.menu_info.is_delete</code>. 状态   0-使用 1－删除
     */
    public final TableField<MenuInfoRecord, Integer> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "状态   0-使用 1－删除");

    /**
     * The column <code>caishen_backstage.menu_info.create_date</code>. 创建时间
     */
    public final TableField<MenuInfoRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>caishen_backstage.menu_info.update_date</code>. 修改时间
     */
    public final TableField<MenuInfoRecord, Timestamp> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>caishen_backstage.menu_info.sort_key</code>. 菜单排序
     */
    public final TableField<MenuInfoRecord, Integer> SORT_KEY = createField("sort_key", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "菜单排序");

    /**
     * Create a <code>caishen_backstage.menu_info</code> table reference
     */
    public MenuInfo() {
        this(DSL.name("menu_info"), null);
    }

    /**
     * Create an aliased <code>caishen_backstage.menu_info</code> table reference
     */
    public MenuInfo(String alias) {
        this(DSL.name(alias), MENU_INFO);
    }

    /**
     * Create an aliased <code>caishen_backstage.menu_info</code> table reference
     */
    public MenuInfo(Name alias) {
        this(alias, MENU_INFO);
    }

    private MenuInfo(Name alias, Table<MenuInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private MenuInfo(Name alias, Table<MenuInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CaishenBackstage.CAISHEN_BACKSTAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MENU_INFO_INDEX2, Indexes.MENU_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MenuInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MENU_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MenuInfoRecord> getPrimaryKey() {
        return Keys.KEY_MENU_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MenuInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<MenuInfoRecord>>asList(Keys.KEY_MENU_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MenuInfo as(String alias) {
        return new MenuInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MenuInfo as(Name alias) {
        return new MenuInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MenuInfo rename(String name) {
        return new MenuInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MenuInfo rename(Name name) {
        return new MenuInfo(name, null);
    }
}
