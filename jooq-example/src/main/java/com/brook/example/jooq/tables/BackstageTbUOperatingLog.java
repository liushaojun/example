/*
 * This file is generated by jOOQ.
*/
package com.brook.example.jooq.tables;


import com.brook.example.jooq.CaishenBackstage;
import com.brook.example.jooq.Indexes;
import com.brook.example.jooq.Keys;
import com.brook.example.jooq.tables.records.BackstageTbUOperatingLogRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BackstageTbUOperatingLog extends TableImpl<BackstageTbUOperatingLogRecord> {

    private static final long serialVersionUID = 1121126113;

    /**
     * The reference instance of <code>caishen_backstage.backstage_tb_u_operating_log</code>
     */
    public static final BackstageTbUOperatingLog BACKSTAGE_TB_U_OPERATING_LOG = new BackstageTbUOperatingLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BackstageTbUOperatingLogRecord> getRecordType() {
        return BackstageTbUOperatingLogRecord.class;
    }

    /**
     * The column <code>caishen_backstage.backstage_tb_u_operating_log.op_id</code>. 主键
     */
    public final TableField<BackstageTbUOperatingLogRecord, Integer> OP_ID = createField("op_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>caishen_backstage.backstage_tb_u_operating_log.op_type_name</code>. 类型名称
     */
    public final TableField<BackstageTbUOperatingLogRecord, String> OP_TYPE_NAME = createField("op_type_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "类型名称");

    /**
     * The column <code>caishen_backstage.backstage_tb_u_operating_log.op_desc</code>. 描述
     */
    public final TableField<BackstageTbUOperatingLogRecord, String> OP_DESC = createField("op_desc", org.jooq.impl.SQLDataType.VARCHAR(255), this, "描述");

    /**
     * The column <code>caishen_backstage.backstage_tb_u_operating_log.op_gen_time</code>. 创建时间
     */
    public final TableField<BackstageTbUOperatingLogRecord, String> OP_GEN_TIME = createField("op_gen_time", org.jooq.impl.SQLDataType.VARCHAR(50), this, "创建时间");

    /**
     * The column <code>caishen_backstage.backstage_tb_u_operating_log.ip_address</code>. IP地址
     */
    public final TableField<BackstageTbUOperatingLogRecord, String> IP_ADDRESS = createField("ip_address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "IP地址");

    /**
     * The column <code>caishen_backstage.backstage_tb_u_operating_log.user_id</code>. 外键
     */
    public final TableField<BackstageTbUOperatingLogRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "外键");

    /**
     * The column <code>caishen_backstage.backstage_tb_u_operating_log.str1</code>.
     */
    public final TableField<BackstageTbUOperatingLogRecord, String> STR1 = createField("str1", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>caishen_backstage.backstage_tb_u_operating_log.str2</code>.
     */
    public final TableField<BackstageTbUOperatingLogRecord, String> STR2 = createField("str2", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>caishen_backstage.backstage_tb_u_operating_log.str3</code>.
     */
    public final TableField<BackstageTbUOperatingLogRecord, String> STR3 = createField("str3", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * Create a <code>caishen_backstage.backstage_tb_u_operating_log</code> table reference
     */
    public BackstageTbUOperatingLog() {
        this(DSL.name("backstage_tb_u_operating_log"), null);
    }

    /**
     * Create an aliased <code>caishen_backstage.backstage_tb_u_operating_log</code> table reference
     */
    public BackstageTbUOperatingLog(String alias) {
        this(DSL.name(alias), BACKSTAGE_TB_U_OPERATING_LOG);
    }

    /**
     * Create an aliased <code>caishen_backstage.backstage_tb_u_operating_log</code> table reference
     */
    public BackstageTbUOperatingLog(Name alias) {
        this(alias, BACKSTAGE_TB_U_OPERATING_LOG);
    }

    private BackstageTbUOperatingLog(Name alias, Table<BackstageTbUOperatingLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private BackstageTbUOperatingLog(Name alias, Table<BackstageTbUOperatingLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CaishenBackstage.CAISHEN_BACKSTAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BACKSTAGE_TB_U_OPERATING_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BackstageTbUOperatingLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BACKSTAGE_TB_U_OPERATING_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BackstageTbUOperatingLogRecord> getPrimaryKey() {
        return Keys.KEY_BACKSTAGE_TB_U_OPERATING_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BackstageTbUOperatingLogRecord>> getKeys() {
        return Arrays.<UniqueKey<BackstageTbUOperatingLogRecord>>asList(Keys.KEY_BACKSTAGE_TB_U_OPERATING_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackstageTbUOperatingLog as(String alias) {
        return new BackstageTbUOperatingLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackstageTbUOperatingLog as(Name alias) {
        return new BackstageTbUOperatingLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BackstageTbUOperatingLog rename(String name) {
        return new BackstageTbUOperatingLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BackstageTbUOperatingLog rename(Name name) {
        return new BackstageTbUOperatingLog(name, null);
    }
}
