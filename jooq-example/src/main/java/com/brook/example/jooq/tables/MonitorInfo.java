/*
 * This file is generated by jOOQ.
*/
package com.brook.example.jooq.tables;


import com.brook.example.jooq.CaishenBackstage;
import com.brook.example.jooq.Indexes;
import com.brook.example.jooq.Keys;
import com.brook.example.jooq.tables.records.MonitorInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MonitorInfo extends TableImpl<MonitorInfoRecord> {

    private static final long serialVersionUID = 1917289850;

    /**
     * The reference instance of <code>caishen_backstage.monitor_info</code>
     */
    public static final MonitorInfo MONITOR_INFO = new MonitorInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MonitorInfoRecord> getRecordType() {
        return MonitorInfoRecord.class;
    }

    /**
     * The column <code>caishen_backstage.monitor_info.id</code>. 主键
     */
    public final TableField<MonitorInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>caishen_backstage.monitor_info.name</code>. 应用名称
     */
    public final TableField<MonitorInfoRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(40).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "应用名称");

    /**
     * The column <code>caishen_backstage.monitor_info.url</code>. 监控服务地址
     */
    public final TableField<MonitorInfoRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "监控服务地址");

    /**
     * The column <code>caishen_backstage.monitor_info.is_delete</code>. 删除标记 0:未删除,1:删除
     */
    public final TableField<MonitorInfoRecord, Boolean> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BOOLEAN)), this, "删除标记 0:未删除,1:删除");

    /**
     * The column <code>caishen_backstage.monitor_info.error_result</code>. 返回结果信息
     */
    public final TableField<MonitorInfoRecord, String> ERROR_RESULT = createField("error_result", org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "返回结果信息");

    /**
     * The column <code>caishen_backstage.monitor_info.desc</code>. 描述
     */
    public final TableField<MonitorInfoRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "描述");

    /**
     * The column <code>caishen_backstage.monitor_info.status</code>. 监控状态
     */
    public final TableField<MonitorInfoRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("RUNNING", org.jooq.impl.SQLDataType.VARCHAR)), this, "监控状态");

    /**
     * The column <code>caishen_backstage.monitor_info.create_time</code>. 创建时间
     */
    public final TableField<MonitorInfoRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>caishen_backstage.monitor_info.update_time</code>. 更新时间
     */
    public final TableField<MonitorInfoRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * Create a <code>caishen_backstage.monitor_info</code> table reference
     */
    public MonitorInfo() {
        this(DSL.name("monitor_info"), null);
    }

    /**
     * Create an aliased <code>caishen_backstage.monitor_info</code> table reference
     */
    public MonitorInfo(String alias) {
        this(DSL.name(alias), MONITOR_INFO);
    }

    /**
     * Create an aliased <code>caishen_backstage.monitor_info</code> table reference
     */
    public MonitorInfo(Name alias) {
        this(alias, MONITOR_INFO);
    }

    private MonitorInfo(Name alias, Table<MonitorInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private MonitorInfo(Name alias, Table<MonitorInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CaishenBackstage.CAISHEN_BACKSTAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MONITOR_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MonitorInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_MONITOR_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MonitorInfoRecord> getPrimaryKey() {
        return Keys.KEY_MONITOR_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MonitorInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<MonitorInfoRecord>>asList(Keys.KEY_MONITOR_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MonitorInfo as(String alias) {
        return new MonitorInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MonitorInfo as(Name alias) {
        return new MonitorInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MonitorInfo rename(String name) {
        return new MonitorInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MonitorInfo rename(Name name) {
        return new MonitorInfo(name, null);
    }
}
