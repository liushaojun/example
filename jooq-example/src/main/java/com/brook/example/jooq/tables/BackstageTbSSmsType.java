/*
 * This file is generated by jOOQ.
*/
package com.brook.example.jooq.tables;


import com.brook.example.jooq.CaishenBackstage;
import com.brook.example.jooq.Indexes;
import com.brook.example.jooq.Keys;
import com.brook.example.jooq.tables.records.BackstageTbSSmsTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BackstageTbSSmsType extends TableImpl<BackstageTbSSmsTypeRecord> {

    private static final long serialVersionUID = 1169992968;

    /**
     * The reference instance of <code>caishen_backstage.backstage_tb_s_sms_type</code>
     */
    public static final BackstageTbSSmsType BACKSTAGE_TB_S_SMS_TYPE = new BackstageTbSSmsType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BackstageTbSSmsTypeRecord> getRecordType() {
        return BackstageTbSSmsTypeRecord.class;
    }

    /**
     * The column <code>caishen_backstage.backstage_tb_s_sms_type.st_id</code>.
     */
    public final TableField<BackstageTbSSmsTypeRecord, Integer> ST_ID = createField("st_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>caishen_backstage.backstage_tb_s_sms_type.st_type_name</code>. 发送短信类型，如(注册未绑卡的)
     */
    public final TableField<BackstageTbSSmsTypeRecord, String> ST_TYPE_NAME = createField("st_type_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "发送短信类型，如(注册未绑卡的)");

    /**
     * Create a <code>caishen_backstage.backstage_tb_s_sms_type</code> table reference
     */
    public BackstageTbSSmsType() {
        this(DSL.name("backstage_tb_s_sms_type"), null);
    }

    /**
     * Create an aliased <code>caishen_backstage.backstage_tb_s_sms_type</code> table reference
     */
    public BackstageTbSSmsType(String alias) {
        this(DSL.name(alias), BACKSTAGE_TB_S_SMS_TYPE);
    }

    /**
     * Create an aliased <code>caishen_backstage.backstage_tb_s_sms_type</code> table reference
     */
    public BackstageTbSSmsType(Name alias) {
        this(alias, BACKSTAGE_TB_S_SMS_TYPE);
    }

    private BackstageTbSSmsType(Name alias, Table<BackstageTbSSmsTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private BackstageTbSSmsType(Name alias, Table<BackstageTbSSmsTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CaishenBackstage.CAISHEN_BACKSTAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BACKSTAGE_TB_S_SMS_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BackstageTbSSmsTypeRecord> getPrimaryKey() {
        return Keys.KEY_BACKSTAGE_TB_S_SMS_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BackstageTbSSmsTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<BackstageTbSSmsTypeRecord>>asList(Keys.KEY_BACKSTAGE_TB_S_SMS_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackstageTbSSmsType as(String alias) {
        return new BackstageTbSSmsType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackstageTbSSmsType as(Name alias) {
        return new BackstageTbSSmsType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BackstageTbSSmsType rename(String name) {
        return new BackstageTbSSmsType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BackstageTbSSmsType rename(Name name) {
        return new BackstageTbSSmsType(name, null);
    }
}
